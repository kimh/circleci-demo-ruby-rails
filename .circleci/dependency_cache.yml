version: 2
jobs:
  build:
    docker:
    - image: circleci/ruby:2.4.2-jessie-node
      environment:
        PGHOST: 127.0.0.1
        PGUSER: circleci-demo-ruby
        RAILS_ENV: test
    - image: circleci/postgres:9.5-alpine
      environment:
        POSTGRES_USER: circleci-demo-ruby
        POSTGRES_DB: rails_blog
        # Add this to context
        POSTGRES_PASSWORD: $PG_PASSWORD
    steps:
    - checkout
    # Restore bundle cache
    - type: cache-restore
      key: v1-rails-demo-{{ checksum "Gemfile.lock" }}
    - run:
        name: Bundle install
        command: bundle install --path vendor/bundle
    # Store bundle cache
    - type: cache-save
      key: v1-rails-demo-{{ checksum "Gemfile.lock" }}
      paths:
        - vendor/bundle
    - run:
        name: Wait for DB
        command: dockerize -wait tcp://localhost:5432 -timeout 1m
    - run:
        name: Database setup
        command: bin/rails db:schema:load --trace
    - run:
        name: Run rspec in parallel
        command: |
          bundle exec rspec --format RspecJunitFormatter --out test_results/rspec.xml

    - store_test_results:
        path: test_results

  lint:
    docker:
    - image: circleci/ruby:2.4.2-jessie-node
    steps:
    - checkout
    - run:
        name: Bundle install
        command: bundle install --path vendor/bundle
    - run:
        name: Run lint
        command: |
          bundle exec rails_best_practices

workflows:
  version: 2
  workflow:
    jobs:
      - build
      - lint
